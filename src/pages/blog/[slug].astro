---
import { type CollectionEntry, getCollection } from "astro:content";
import { BLOCKS } from "@contentful/rich-text-types";
import BlogPost from "../../layouts/BlogPost.astro";
import { contentfulClient } from "../../lib/contentful";
import { documentToHtmlString } from "@contentful/rich-text-html-renderer";
import type { Post } from "../../lib/contentful";
import { markdown, Markdown } from "@astropub/md";

import { Debug } from "astro:components";

const entries = await contentfulClient.getEntries<Post>({
  content_type: "post",
});
const pages = entries.items.map((item) => ({
  params: { slug: item.fields.slug },
  props: {
    title: item.fields.title,
    body: item.fields.body,
    test: item.fields.body,
    publishDate: new Date(item.fields.publishDate).toLocaleDateString(),
  },
}));

const { slug } = Astro.params;
const page = pages.find((page) => page.params.slug === slug);
if (!page) return Astro.redirect("/404");
const { title, publishDate, body, test } = page.props;

const hi = await markdown(body);
---

<BlogPost>
  <article set:html={hi} />
</BlogPost>
