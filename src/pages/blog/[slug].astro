---
import { type CollectionEntry, getCollection } from "astro:content";
import BlogPost from "../../layouts/BlogPost.astro";
import { contentfulClient } from "../../lib/contentful";
import { documentToHtmlString } from "@contentful/rich-text-html-renderer";
import type { Post } from "../../lib/contentful";
<<<<<<< Updated upstream
=======
import { marked } from "marked";
>>>>>>> Stashed changes

import { Debug } from "astro:components";

export async function getStaticPaths() {
  const entries = await contentfulClient.getEntries<Post>({
    content_type: "post",
  });

<<<<<<< Updated upstream
  const pages = entries.items.map((item) => ({
    params: { slug: item.fields.slug },
    props: {
      title: item.fields.title,
      body: documentToHtmlString(item.fields.body),
      publishDate: new Date(item.fields.publishDate).toLocaleDateString(),
    },
  }));
  return pages;
}

const { body, title, publishDate } = Astro.props;

console.log(body);
---

<html lang="en">
  <head>
    <title>{title}</title>
  </head>
  <body>
    <h1>{title}</h1>
    <time>{publishDate}</time>
    <Debug answer={publishDate} />
    <article set:html={publishDate} />
  </body>
</html>
=======
const { slug } = Astro.params;
const page = pages.find((page) => page.params.slug === slug);
if (!page) return Astro.redirect("/404");
const { title, publishDate, body, test } = page.props;
---

<BlogPost>
  {body}
  hr
  <!-- {marked.parse(body)} -->
  <Fragment set:html={marked.parse(body)} />
</BlogPost>
>>>>>>> Stashed changes
