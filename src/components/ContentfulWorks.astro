---
import { POSTS_PER_PAGE_MAX, POSTS_PER_PAGE_MIN } from "../consts";
import { css } from "../../styled-system/css";
import { contentfulClient, type Work } from "../lib/contentful";

export const contentfulEntries = await contentfulClient.getEntries<Work>({
  content_type: "work",
});

export const contentfulPosts = contentfulEntries.items.map((item) => {
  const { title, slug, metaDescription, publishDate } = item.fields;
  return {
    title,
    slug,
    metaDescription,
    publishDate: new Date(publishDate).toLocaleDateString(),
  };
});

export const contentfulPostsLength = contentfulPosts.length;

const page = Astro.url.searchParams.get("page") || "1";

interface ContentfulWorksProps {
  // posts?: WorkFields;
  works?: any;
  pageParam?: number;
  worksPerPage?: number;
}

const {
  works = contentfulPosts,
  pageParam = parseInt(page),
  worksPerPage = POSTS_PER_PAGE_MAX,
}: ContentfulWorksProps = Astro.props;
---

<ul>
  {
    works
      .slice((pageParam - 1) * worksPerPage, pageParam * worksPerPage)
      .map((post: any) => (
        <li
          class={css({
            mb: 4,
            color: "primary",
          })}
        >
          <a href={`/blog/${post.slug}`}>
            Title:{post.title}, Date: {post.publishDate}, Slug: {post.slug}
          </a>
        </li>
      ))
  }
</ul>
